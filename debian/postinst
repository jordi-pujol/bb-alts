#!/bin/sh

# bb-alts:
# installs Debian alternatives for busybox internal applets

# Copyright: (C) 2009-2017 Jordi Pujol <jordipujolp@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -e

_is_absolute_path() {
	local a_path="${1}"
	[ "$(dirname "${a_path}")" != '.' ] && \
	[ "$(printf '%c' "${a_path}")" = '/' ] && \
	[ -d "$(dirname "${a_path}")" ]
}

_comma_separated() {
	sed -re ':a
		N
		$!ba
		s/([^[:space:]])[[:space:]]+([^[:space:]])/\1'"${1:-","}"'\2/g
		s/^[[:space:]]+|[[:space:]]+$//g'
}

_bb_targets() {
	( echo "${bb}"
	dpkg -L bb-alts | grep -se '^/usr/bin/.*-busybox' ) | \
	_comma_separated '|'
}

_check() {
	local a_name="${1}"
	test -L "/etc/alternatives/${a_name}" || return 0
	ls -L "/etc/alternatives/${a_name}" > /dev/null 2>&1 || \
		update-alternatives --auto "${a_name}"
}

# searching for a matching man page
_search_applet_manpage() {
	local t
	[ -n "${man_cmd}" ] || \
		return 1
	for t in "${@}"; do
		! "${man_cmd}" --where "${t}" || \
			return 0
	done 2> /dev/null
	return 1
}

_is_installable() {
	a_path="$(echo "${alt}" | cut -f 1 -d ':')"
	a_name="$(echo "${alt}" | cut -f 2 -s -d ':')"
	target="$(echo "${alt}" | cut -f 3 -s -d ':')"
	a_path_basename="$(basename "${a_path}")"
	[ -n "${a_name}" ] || a_name="$(basename "${a_path}")"
	[ -n "${target}" ] || target="${bb}"
	if [ ! -x "$(which "${target}")" ]; then
		printf 'Error: alternative %s, target %s does not exist.\n' \
		"${a_path}" "${target}" >&2
		return 1
	fi
	target="$(which "${target}")"
	if [ "${target}" = "${bb}" ]; then
		if ! echo "${bb_applet_names}" | grep -qswe "${a_path_basename}"; then
			printf 'Error: alternative %s, busybox applet %s does not exist.\n' \
			"${a_path}" "${a_path_basename}" >&2
			return 1
		fi
		_is_absolute_path "${a_path}" || \
			a_path="$(echo "${bb_applets}" | grep -swe "${a_path_basename}\$")" || \
			return 1
	elif ! echo "${target}" | grep -qsxE "${bb_targets}"; then
		printf "%s: alternative %s, target %s is not a busybox applet.\n" \
			"$(test -n "${USE_ALTS_FOREIGN:-}" && echo "Warning" || echo "Error")" \
			"${a_path}" "${target}" >&2
		if ! _is_absolute_path "${a_path}"; then
			printf 'Error: invalid alternative, %s must specify directory.\n' \
			"${a_path}" >&2
			return 1
		fi
		[ -n "${USE_ALTS_FOREIGN:-}" ] || \
			return 1
	fi
	if [ -e "${a_path}" ] && \
	! readlink "${a_path}" | grep -qse '^/etc/alternatives/'; then
		printf "Warning: not installing alternative %s in %s already provided by %s\n" \
		"${a_name}" "${a_path}" "$(dpkg -S "$(readlink -f "${a_path}")" 2> /dev/null || \
		echo "unknown")" >&2
		return 1
	fi

	[ -n "${man_cmd}" ] || \
		return 0

	if [ -z "${a_manpage}" ]; then
		t_manpage="${manpage}"
	elif [ "${a_manpage}" = "-" ]; then
		t_manpage=""
	elif [ "${a_manpage}" = "?" ]; then
		t_manpage="$(_search_applet_manpage "${a_path_basename}" "$(basename "${target}")")" || \
			printf "Warning: have not found a man page for alternative %s.\n" \
			"${a_name}" >&2
	else
		t_manpage="$(_search_applet_manpage "${a_manpage}")" || \
			printf "Warning: have not found man page %s for alternative %s.\n" \
			"${a_manpage}" "${a_name}" >&2
	fi
}

_install_slaves() {
	local alt a_path a_path_basename a_name target
	for alt in "${@}"; do
		_is_installable || continue
		echo "--slave ${a_path} ${a_name} ${target}"
		[ -z "${t_manpage}" ] || \
			echo "--slave ${mandir}${a_name}.1.gz ${a_name}.1.gz ${t_manpage}"
	done
}

# parse configuration variables and install alternatives
_alts() {
	local link_group alt res
	local a_path a_path_basename a_priority a_name a_manpage target t_manpage
	local reconfigure="$(test ! -e /var/tmp/bb-alts-reconfigure.txt || echo "1")"
	local bb_applets="$(busybox --list-full | \
		sed -nre '\|[^a-z]+$|d; {\|^| s||/|;p}' | \
		sort -u)"
	local bb_applet_names="$(busybox --list | \
		sed -re '\|[^a-z]|d;$!{:a;N;s/\n/\t/;ta}')"
	local bb_targets="$(_bb_targets)"
	local man_cmd manpage="" mandir=""
	if man_cmd="$(which "man")" && \
	manpage="$("${man_cmd}" --where "busybox" 2> /dev/null)"; then
		mandir="$(dirname "${manpage}")/"
	fi

	printf 'Installing %salternatives.\n' \
		"$(test -n "${BB_ALTS_FOREIGN:-}" || echo "busybox ")" >&2

	for link_group in ${BB_ALTS} \
	${USE_ALTS_EXTRA:+${BB_ALTS_EXTRA:-}} \
	${USE_ALTS_FOREIGN:+${BB_ALTS_FOREIGN:-}}; do
		alt="$(echo "${link_group}" | cut -f 1 -d ',')"
		a_manpage="$(echo "${alt}" | cut -f 5 -s -d ':')"
		_is_installable || continue
		a_priority="$(echo "${alt}" | cut -f 4 -s -d ':')"
		[ -z "${reconfigure}" ] || \
			sed -i -re "\|^${a_name}[[:blank:]]+| d" /var/tmp/bb-alts-reconfigure.txt
		if res="$(update-alternatives --install "${a_path}" "${a_name}" \
		"${target}" "${a_priority:-${PRIORITY}}" \
		$( [ -z "${t_manpage}" ] || \
		echo "--slave ${mandir}${a_path_basename}.1.gz \
${a_path_basename}.1.gz ${t_manpage}"
		_install_slaves $(echo "${link_group}" | \
		cut -f 2- -s -d ',' | tr -s ',' ' ')) \
		2>&1)"; then
			printf 'Installing alternative %s in %s for %s.\n' \
				"${a_name}" "${a_path}" "${target}" >&2
			[ -z "$(echo  "${res}" | tr -d '[:space:]')" ] || \
				printf '%s\n' "${res}" >&2
			_check "${a_name}"
		else
			printf 'Error: %s\n' "${res}" >&2
		fi
	done
	[ -z "${reconfigure}" ] || \
		while read a_name target; do
			echo "Removing alternative ${a_name} for ${target}" >&2
			res="$(update-alternatives --remove "${a_name}" "${target}" 2>&1)" || \
				printf 'Error: %s\n' "${res}" >&2
			_check "${a_name}"
		done < /var/tmp/bb-alts-reconfigure.txt
}

bb="$(which "busybox")" || exit 1
. /etc/bb-alts.conf
[ -n "${BB_ALTS:-}" ] || exit 1

case "${1:-}" in
configure)
	_alts
	;;
esac
rm -f /var/tmp/bb-alts-reconfigure.txt

#DEBHELPER#
