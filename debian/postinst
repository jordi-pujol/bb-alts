#!/bin/sh

# install busybox applets as utilities using Debian alternatives.

# Copyright: (C) 2009-2016 Jordi Pujol <jordipujolp@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -e

_is_absolute_path() {
	local a_path="${1}"
	[ "$(dirname "${a_path}")" != '.' ] && \
	[ "$(printf '%c' "${a_path}")" = '/' ] && \
	[ -d "$(dirname "${a_path}")" ]
}

_bb_targets() {
	printf '%s' "${bb} $(dpkg -L bb-alts | grep -se '^/usr/bin/.*-busybox')" | \
		tr -s '[:space:]' '|'
}

_is_installable() {
	local t
	a_path="$(echo "${alt}" | cut -f 1 -d ':')"
	a_name="$(echo "${alt}" | cut -f 2 -s -d ':')"
	target="$(echo "${alt}" | cut -f 3 -s -d ':')"
	a_path_basename="$(basename "${a_path}")"
	[ -n "${a_name}" ] || a_name="$(basename "${a_path}")"
	[ -n "${target}" ] || target="${bb}"
	t="$(which "${target}")" && \
	[ -x "${t}" ] || \
		( printf 'Error: alternative %s target %s does not exist.\n' \
		"${a_path}" "${target}" >&2
		return 1 )
	target="$(which "${target}")"
	if [ "${target}" = "${bb}" ]; then
		if ! echo "${bb_applets}" | grep -qswe "${a_path_basename}$"; then
			printf 'Error: alternative %s busybox applet %s does not exist.\n' \
			"${a_path}" "${a_path_basename}" >&2
			return 1
		fi
		_is_absolute_path "${a_path}" || \
			a_path="$(echo "${bb_applets}" | grep -swe "${a_path_basename}\$")"
	elif ! echo "${target}" | grep -qsxE "${bb_targets}"; then
		printf "Error: alternative %s target %s is not a busybox applet.\n" \
		"${a_path}" "${target}" >&2
		return 1
	fi
	if [ -e "${a_path}" ] && \
	! readlink "${a_path}" | grep -qse '^/etc/alternatives/'; then
		printf "Warning: not installing alternative %s in %s already provided by %s\n" \
		"${a_name}" "${a_path}" "$(dpkg -S "$(readlink -f "${a_path}")" 2> /dev/null || \
		echo "unknown")" >&2
		return 1
	fi
	:
}

_install_slaves() {
	local alt a_path a_path_basename a_name target
	for alt in "${@}"; do
		_is_installable || continue
		echo "--slave ${a_path} ${a_name} ${target} \
--slave ${mandir}/man1/${a_name}.1.gz ${a_name}.1.gz ${mandir}/man1/busybox.1.gz"
	done
	:
}

# parse configuration variables and install alternatives
_alts() {
	local reconfigure="$(test ! -e /var/tmp/bb-alts-reconfigure.txt || echo "1")"
	local bb_applets priority
	local link_group alt res
	local a_path a_path_basename a_priority a_name target
	local mandir="/usr/share/man"
	bb_applets="$(busybox --list-full | sed -nre '3,$ {\|^| s||/|;p}')"

	echo "Installing some busybox alternatives." >&2

	for link_group in ${BB_ALTS} \
	${USE_ALTS_EXTRA:+${BB_ALTS_EXTRA:-}}; do
		alt="$(echo "${link_group}" | cut -f 1 -d ',')"
		_is_installable || continue
		a_priority="$(echo "${alt}" | cut -f 4 -s -d ':')"
		echo "Installing alternative ${a_name} in ${a_path} for ${target}" >&2
		[ -z "${reconfigure}" ] || \
			sed -i -re "\|^${a_name}[[:blank:]]+| d" /var/tmp/bb-alts-reconfigure.txt
		res="$(update-alternatives --install "${a_path}" "${a_name}" \
		"${target}" "${a_priority:-${PRIORITY}}" \
		$(echo "--slave ${mandir}/man1/${a_path_basename}.1.gz ${a_path_basename}.1.gz ${mandir}/man1/busybox.1.gz"
		_install_slaves $(echo "${link_group}" | \
		cut -f 2- -s -d ',' | tr -s ',' ' ')) \
		 2>&1)" || \
			printf 'Error: %s\n' "${res}" >&2
	done
	[ -z "${reconfigure}" ] || \
		while read a_name target; do
			echo "Removing alternative ${a_name} for ${target}" >&2
			res="$(update-alternatives --remove "${a_name}" "${target}" 2>&1)" || \
				printf 'Error: %s\n' "${res}" >&2
		done < /var/tmp/bb-alts-reconfigure.txt
	:
}

bb="$(which "busybox")" || exit 1
. /etc/bb-alts.conf
[ -n "${BB_ALTS:-}" ] || exit 1
bb_targets="$(_bb_targets)"

case "${1:-}" in
configure)
	_alts
	;;
esac
rm -f /var/tmp/bb-alts-reconfigure.txt

#DEBHELPER#
